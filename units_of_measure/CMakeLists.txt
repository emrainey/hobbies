cmake_minimum_required(VERSION 3.20.0)
project(units_of_measure LANGUAGES CXX VERSION 0.7.0)  # This must match the conanfile.py!
set(CMAKE_CXX_STANDARD 17)

enable_testing()

option(BUILD_SHARED_LIBS "Builds libraries as dynamic objects" OFF)

add_library(hobbies-uom
    # IEC
    "source/iec/prefix.cpp"
    # ISO
    "source/iso/operators.cpp"
    "source/iso/convert.cpp"
    "source/iso/electrical.cpp"
    "source/iso/iso.cpp"
    ## Units
    "source/iso/feet.cpp" # not generated by jinja
    "source/iso/amperes.cpp"
    "source/iso/degrees.cpp"
    "source/iso/grams.cpp"
    "source/iso/hertz.cpp"
    "source/iso/joules.cpp"
    "source/iso/meters.cpp"
    "source/iso/newtons.cpp"
    "source/iso/ohms.cpp"
    "source/iso/pascals.cpp"
    "source/iso/radians.cpp"
    "source/iso/seconds.cpp"
    "source/iso/turns.cpp"
    "source/iso/volts.cpp"
    "source/iso/watts.cpp"
    # SI
    "source/si/prefix.cpp"
)
target_include_directories(hobbies-uom PUBLIC
    # Generated Tree
    $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include>
    # Source Tree
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    # Install Tree
    $<INSTALL_INTERFACE:include>
)
set_target_properties(hobbies-uom PROPERTIES
    VERSION ${PROJECT_VERSION}
    SOVERSION ${PROJECT_VERSION_MAJOR}
)

# Declare installs and exports
install(TARGETS hobbies-uom EXPORT UnitsOfMeasureTargets
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin
    INCLUDES DESTINATION include
)
install(EXPORT UnitsOfMeasureTargets
    FILE UnitsOfMeasureTargets.cmake
    NAMESPACE UnitsOfMeasure::
    DESTINATION share/cmake/${PROJECT_NAME}
)
install(DIRECTORY include/iec include/iso include/si
    DESTINATION include
    PATTERN "*.hpp"
    PERMISSIONS WORLD_READ GROUP_READ OWNER_READ
)
install(FILES "cmake/Findunits_of_measure.cmake" "cmake/${PROJECT_NAME}-config.cmake"
    DESTINATION share/cmake/${PROJECT_NAME}
)
#####################################################
# Unit Testing
#####################################################
set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
find_package(GTest REQUIRED)
if (GTest_FOUND)
    add_executable(gtest_iso ${CMAKE_CURRENT_SOURCE_DIR}/test/gtest_iso.cpp)
    target_include_directories(gtest_iso PUBLIC ${GTEST_INCLUDE_DIRS} ${GTest_INCLUDE_DIRS})
    target_link_libraries(gtest_iso PRIVATE hobbies-uom ${GTEST_BOTH_LIBRARIES} ${GTest_LIBS} Threads::Threads)
    add_test(NAME gtest_iso COMMAND gtest_iso)
endif()

#####################################################
# Documentation
#####################################################
find_package(Doxygen
#    REQUIRED dot
#    OPTIONAL_COMPONENTS mscgen dia
)
if (${Doxygen_FOUND})
    set(DOXYGEN_GENERATE_HTML YES)
    set(DOXYGEN_GENERATE_MAN NO)

    doxygen_add_docs(hobbies-uom-docs
        ${CMAKE_CURRENT_SOURCE_DIR}/include
        COMMENT "Units of Measure Doxygen")
endif()
