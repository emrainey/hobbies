{
	// cSpell: disable
	"folders": [
		{
			"name": "basal",
			"path": "projects/basal"
		},
		{
			"name": "units_of_measure",
			"path": "projects/units_of_measure"
		},
		{
			"name": "fourcc",
			"path": "projects/fourcc"
		},
		{
			"name": "xmmt",
			"path": "projects/xmmt"
		},
		{
			"name": "noise",
			"path": "projects/noise"
		},
		{
			"name": "linalg",
			"path": "projects/linalg"
		},
		{
			"name": "geometry",
			"path": "projects/geometry"
		},
		{
			"name": "linalg-utils",
			"path": "projects/linalg-utils"
		},
		{
			"name": "linalg-algo",
			"path": "projects/linalg-algo"
		},
		{
			"name": "raytrace",
			"path": "projects/raytrace"
		},
		{
			"name": "neuralnet",
			"path": "projects/neuralnet"
		},
		{
			"name": "htm",
			"path": "projects/htm"
		},
		{
			"name": "doorgame",
			"path": "projects/doorgame"
		},
		{
			"name": "pyhobbies",
			"path": "projects/pyhobbies"
		},
		{
			"path": "testing",
			"name": "Testing Folder"
		},
		{
			"path": "build",
			"name": "Build Artifacts"
		},
		{
			"path": "install",
			"name": "Installable Artifacts"
		},
		{
			"path": "package",
			"name": "Packaging Artifacts"
		}
	],
	"extensions": {
		"recommendations": [
			"ms-vscode.cmake-tools",
			"fredericbonnet.cmake-test-adapter",
			"matepek.vscode-catch2-test-adapter",
			"ms-vscode.cpptools",
			"samuelcolvin.jinjahtml",
			"cheshirekow.cmake-format",
			"disroop.conan",
			"bbenoist.doxygen",
			"oderwat.indent-rainbow",
			"shd101wyy.markdown-preview-enhanced",
			"davidanson.vscode-markdownlint",
			"gruntfuggly.todo-tree",
			"xaver.clang-format"
		],
	},
	"settings": {
		"editor.formatOnSave": true,
		"cmake.autoSelectActiveFolder": true,
		"cmake.buildDirectory": "${workspaceFolder}/../../build/${workspaceFolderBasename}",
		"cmake.installPrefix": "${workspaceFolder}/../../install",
		"cmake.configureOnOpen": false,
		"cmake.generator": "Unix Makefiles",
		"cmake.environment": {
			"CMAKE_PREFIX_PATH": "${workspaceFolder}/../../install"
		},
		"cmake.configureEnvironment": {
			"CMAKE_INSTALL_PREFIX": "${workspaceFolder}/../../install",
			"CMAKE_BUILD_TYPE": "Release"
		},
		"cmake.testEnvironment": {
			"DYLD_LIBRARY_PATH": "${workspaceFolder}/../../install",
			"CMAKE_BUILD_TYPE": "Release"
		},
		"cmakeExplorer.cmakeIntegration": true,
		"cmakeExplorer.buildDir": "${workspaceFolder}/../../build/${workspaceFolderBasename}",
		"cmakeExplorer.debugConfig": "Debug",
		"cmakeExplorer.parallelJobs": 12,
		"cmake.loggingLevel": "debug",
		"C_Cpp.errorSquiggles": "enabled",
		"C_Cpp.configurationWarnings": "enabled",
		"C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
		"C_Cpp.default.includePath": [
			"${workspaceRoot}/include",
			"${workspaceRoot}/../../install/include",
			"${workspaceFolder}/../../install/include",
			"${workspaceFolder}/../../projects/noise/demo",
			"${workspaceFolder}/../../projects/raytrace/demo",
		],
		// "python.linting.pylintEnabled": true,
		// "python.linting.enabled": true,
		"todo-tree.general.debug": true,
		"todo-tree.filtering.excludeGlobs": [
			"**/googletest/*",
			"**/googlemock/*",
			"**/*.cc",
			"**/*.html",
			"**/*.js",
			"**/*.xml"
		],
		"testExplorer.showOnRun": true,
		"testMate.cpp.test.workingDirectory": "${absDirpath}",
		"testMate.cpp.discovery.strictPattern": true,
		"testMate.cpp.log.logpanel": true,
		"testMate.cpp.debug.configTemplate": {
			"type": "cppdbg",
			"MIMode": "lldb",
			"program": "${exec}",
			"args": "${argsArray}",
			"cwd": "${cwd}",
			"env": "${envObj}",
			"environment": "${envObjArray}",
			"sourceFileMap": "${sourceFileMapObj}",
			"externalConsole": false
		},
		"testMate.cpp.test.executables": "${workspaceFolder}/../../build/**/gtest_*",
		"files.associations": {
			".clang-format": "json",
			"*.yaml": "home-assistant",
			"vector": "cpp",
			"__bit_reference": "cpp",
			"ios": "cpp"
		},
		"cSpell.words": [
			"abgr",
			"ABGR",
			"basal",
			"fourcc",
			"lacunarity",
			"linalg",
			"multiview",
			"perlin"
		],
		"clang.completion.enable": true,
		"clang-format.executable": "clang-format",
		"clang-format.language.cpp.style": "Google",
		"clang-format.language.cpp.fallbackStyle": "LLVM",
		"clang-format.language.cpp.enable": true,
		"C_Cpp.loggingLevel": "Debug",
		"C_Cpp.clang_format_style": "file",
		"C_Cpp.default.cppStandard": "c++17",
		"C_Cpp.default.cStandard": "c17",
		"C_Cpp.default.browse.limitSymbolsToIncludedHeaders": true,
		"C_Cpp.default.compileCommands": "${workspaceFolder}/../../build/${workspaceFolderBasename}/compile_commands.json",
		"C_Cpp.default.browse.path": [
			"${workspaceFolder}/../../projects/basal/include",
			"${workspaceFolder}/../../projects/units_of_measure/include",
			"${workspaceFolder}/../../projects/fourcc/include",
			"${workspaceFolder}/../../projects/geometry/include",
			"${workspaceFolder}/../../projects/noise/include",
			"${workspaceFolder}/../../projects/linalg/include",
			"${workspaceFolder}/../../projects/linalg-utils/include",
			"${workspaceFolder}/../../projects/linalg-algo/include",
			"${workspaceFolder}/../../projects/raytrace/include",
			"${workspaceFolder}/../../projects/neuralnet/include",
			"${workspaceFolder}/../../projects/htm/include",
			"${workspaceFolder}/../../projects/doorgame/include",
		],
		"C_Cpp.default.browse.databaseFilename": "${workspaceFolder}/../../build/${workspaceFolderBasename}/browse.db",
		"vsconan.general.pythonInterpreter": "python3",
		"vsconan.explorer.treeview.package.showDirtyPackage": true,
	},
	"tasks": {
		"version": "2.0.0",
		"tasks": [
			{
				"label": "Print Variables",
				"command": "echo \r\nworkspaceFolder=${workspaceFolder}\r\nworkspaceFolderBasename=${workspaceFolderBasename}\r\nworkspaceRoot=${workspaceRoot}\r\nworkspaceRootPath=${workspaceRootPath}\r\nworkspaceFolder:fourcc=${workspaceFolder:fourcc}",
				"type": "shell",
				"args": [],
			},
			{
				"label": "Build Everything with Conan",
				"command": "(cd ../../ && ./separate_builds.sh -c)",
				"type": "shell",
				"args": [],
				"group": "build",
				"problemMatcher": "$gcc"
			},
			{
				"label": "Build Everything with CMake",
				"command": "(cd ../../ && ./separate_builds.sh)",
				"type": "shell",
				"args": [],
				"group": "build",
				"problemMatcher": "$gcc"
			}
		]
	}
}